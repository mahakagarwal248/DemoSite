{"ast":null,"code":"var _jsxFileName = \"/home/bhomik/Desktop/github project/DemoSite/src/context/Email/EmailState.js\";\nimport React from \"react\";\nimport Emailcontext from \"./Emaitcontext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst nodemailer = require(\"nodemailer\");\n\nconst {\n  google\n} = require(\"googleapis\");\n\noAuth2Client.setCredentials({\n  refresh_token: REFRESH_TOKEN\n});\n\nconst EmaitState = props => {\n  const CLIENT_ID = \"486661095255-m3ppko6s3bnaechni1uvmc60ovroheac.apps.googleusercontent.com\";\n  const CLEINT_SECRET = \"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\";\n  const REDIRECT_URI = \"https://developers.google.com/oauthplayground\";\n  const REFRESH_TOKEN = \"1//042xVjKvotZiLCgYIARAAGAQSNwF-L9IrGYAxXh07QkbA2Ig27UKF8HVkC7Enadko2wXBbNVa4xaFWv2Cw8RoEZ7oBLBnvoAtTeE\";\n  const oAuth2Client = new google.auth.OAuth2(CLIENT_ID, CLEINT_SECRET, REDIRECT_URI);\n\n  async function sendMail(Data) {\n    try {\n      const accessToken = await oAuth2Client.getAccessToken();\n      const transport = nodemailer.createTransport({\n        service: \"gmail\",\n        auth: {\n          type: \"OAuth2\",\n          user: \"easycoding2000@gmail.com\",\n          clientId: CLIENT_ID,\n          clientSecret: CLEINT_SECRET,\n          refreshToken: REFRESH_TOKEN,\n          accessToken: accessToken\n        }\n      });\n      const mailOptions = {\n        from: \"easyCoding <easycoding2000@gmail.com>\",\n        to: [\"bhomickyadav786@gmail.com\", \"mahakagarwal248@gmail.com\"],\n        subject: \"Hello from gmail using API\",\n        text: `username:${Data.name}\\n userid:${Data.email}\\n message:${Data.msg} ` // html: \"<h1>Hello from gmail email using API</h1>\",\n\n      };\n      const result = await transport.sendMail(mailOptions);\n      return result;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Emailcontext.Provider, {\n    value: sendMail,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EmaitState;\nexport default EmaitState;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmaitState\");","map":{"version":3,"sources":["/home/bhomik/Desktop/github project/DemoSite/src/context/Email/EmailState.js"],"names":["React","Emailcontext","nodemailer","require","google","oAuth2Client","setCredentials","refresh_token","REFRESH_TOKEN","EmaitState","props","CLIENT_ID","CLEINT_SECRET","REDIRECT_URI","auth","OAuth2","sendMail","Data","accessToken","getAccessToken","transport","createTransport","service","type","user","clientId","clientSecret","refreshToken","mailOptions","from","to","subject","text","name","email","msg","result","error","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,YAAD,CAA1B;;AAEAE,YAAY,CAACC,cAAb,CAA4B;AAAEC,EAAAA,aAAa,EAAEC;AAAjB,CAA5B;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,SAAS,GACb,0EADF;AAEA,QAAMC,aAAa,GAAG,qCAAtB;AACA,QAAMC,YAAY,GAAG,+CAArB;AACA,QAAML,aAAa,GACjB,yGADF;AAEA,QAAMH,YAAY,GAAG,IAAID,MAAM,CAACU,IAAP,CAAYC,MAAhB,CACnBJ,SADmB,EAEnBC,aAFmB,EAGnBC,YAHmB,CAArB;;AAKA,iBAAeG,QAAf,CAAwBC,IAAxB,EAA8B;AAC5B,QAAI;AACF,YAAMC,WAAW,GAAG,MAAMb,YAAY,CAACc,cAAb,EAA1B;AAEA,YAAMC,SAAS,GAAGlB,UAAU,CAACmB,eAAX,CAA2B;AAC3CC,QAAAA,OAAO,EAAE,OADkC;AAE3CR,QAAAA,IAAI,EAAE;AACJS,UAAAA,IAAI,EAAE,QADF;AAEJC,UAAAA,IAAI,EAAE,0BAFF;AAGJC,UAAAA,QAAQ,EAAEd,SAHN;AAIJe,UAAAA,YAAY,EAAEd,aAJV;AAKJe,UAAAA,YAAY,EAAEnB,aALV;AAMJU,UAAAA,WAAW,EAAEA;AANT;AAFqC,OAA3B,CAAlB;AAYA,YAAMU,WAAW,GAAG;AAClBC,QAAAA,IAAI,EAAE,uCADY;AAElBC,QAAAA,EAAE,EAAE,CAAC,2BAAD,EAA8B,2BAA9B,CAFc;AAGlBC,QAAAA,OAAO,EAAE,4BAHS;AAIlBC,QAAAA,IAAI,EAAG,YAAWf,IAAI,CAACgB,IAAK,aAAYhB,IAAI,CAACiB,KAAM,cAAajB,IAAI,CAACkB,GAAI,GAJvD,CAKlB;;AALkB,OAApB;AAQA,YAAMC,MAAM,GAAG,MAAMhB,SAAS,CAACJ,QAAV,CAAmBY,WAAnB,CAArB;AACA,aAAOQ,MAAP;AACD,KAzBD,CAyBE,OAAOC,KAAP,EAAc;AACd,aAAOA,KAAP;AACD;AACF;;AAED,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAErB,QAA9B;AAAA,cACGN,KAAK,CAAC4B;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhDD;;KAAM7B,U;AAiDN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport Emailcontext from \"./Emaitcontext\";\nconst nodemailer = require(\"nodemailer\");\nconst { google } = require(\"googleapis\");\n\noAuth2Client.setCredentials({ refresh_token: REFRESH_TOKEN });\nconst EmaitState = (props) => {\n  const CLIENT_ID =\n    \"486661095255-m3ppko6s3bnaechni1uvmc60ovroheac.apps.googleusercontent.com\";\n  const CLEINT_SECRET = \"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\";\n  const REDIRECT_URI = \"https://developers.google.com/oauthplayground\";\n  const REFRESH_TOKEN =\n    \"1//042xVjKvotZiLCgYIARAAGAQSNwF-L9IrGYAxXh07QkbA2Ig27UKF8HVkC7Enadko2wXBbNVa4xaFWv2Cw8RoEZ7oBLBnvoAtTeE\";\n  const oAuth2Client = new google.auth.OAuth2(\n    CLIENT_ID,\n    CLEINT_SECRET,\n    REDIRECT_URI\n  );\n  async function sendMail(Data) {\n    try {\n      const accessToken = await oAuth2Client.getAccessToken();\n\n      const transport = nodemailer.createTransport({\n        service: \"gmail\",\n        auth: {\n          type: \"OAuth2\",\n          user: \"easycoding2000@gmail.com\",\n          clientId: CLIENT_ID,\n          clientSecret: CLEINT_SECRET,\n          refreshToken: REFRESH_TOKEN,\n          accessToken: accessToken,\n        },\n      });\n\n      const mailOptions = {\n        from: \"easyCoding <easycoding2000@gmail.com>\",\n        to: [\"bhomickyadav786@gmail.com\", \"mahakagarwal248@gmail.com\"],\n        subject: \"Hello from gmail using API\",\n        text: `username:${Data.name}\\n userid:${Data.email}\\n message:${Data.msg} `,\n        // html: \"<h1>Hello from gmail email using API</h1>\",\n      };\n\n      const result = await transport.sendMail(mailOptions);\n      return result;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  return (\n    <Emailcontext.Provider value={sendMail}>\n      {props.children}\n    </Emailcontext.Provider>\n  );\n};\nexport default EmaitState;\n"]},"metadata":{},"sourceType":"module"}